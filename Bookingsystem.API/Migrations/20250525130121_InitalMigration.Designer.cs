// <auto-generated />
using System;
using BookingSystem.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookingSystem.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525130121_InitalMigration")]
    partial class InitalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookingService", b =>
                {
                    b.Property<int>("BookingsId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicesId")
                        .HasColumnType("integer");

                    b.HasKey("BookingsId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("BookingServices", (string)null);

                    b.HasData(
                        new
                        {
                            BookingsId = 1,
                            ServicesId = 1
                        },
                        new
                        {
                            BookingsId = 2,
                            ServicesId = 2
                        });
                });

            modelBuilder.Entity("EmployeeService", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicesId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeesId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("EmployeeServices", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeesId = 1,
                            ServicesId = 1
                        },
                        new
                        {
                            EmployeesId = 1,
                            ServicesId = 3
                        },
                        new
                        {
                            EmployeesId = 2,
                            ServicesId = 2
                        },
                        new
                        {
                            EmployeesId = 3,
                            ServicesId = 4
                        },
                        new
                        {
                            EmployeesId = 3,
                            ServicesId = 5
                        });
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            EndTime = new DateTime(2025, 5, 26, 8, 45, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 5, 26, 8, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EmployeeId = 2,
                            EndTime = new DateTime(2025, 5, 27, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 5, 27, 11, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Anna",
                            LastName = "Svensson",
                            PhoneNumber = "0701111111"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Björn",
                            LastName = "Nilsson",
                            PhoneNumber = "0702222222"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Carla",
                            LastName = "Lind",
                            PhoneNumber = "0703333333"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "David",
                            LastName = "Ek",
                            PhoneNumber = "0704444444"
                        });
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Elin",
                            LastName = "Frisör",
                            PhoneNumber = "0761234567"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Farid",
                            LastName = "Barber",
                            PhoneNumber = "0762345678"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Greta",
                            LastName = "Hud",
                            PhoneNumber = "0763456789"
                        });
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 0, 45, 0, 0),
                            Price = 350m,
                            ServiceName = "Hårklippning"
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            Price = 250m,
                            ServiceName = "Skäggklippning"
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 1, 30, 0, 0),
                            Price = 800m,
                            ServiceName = "Färgning"
                        },
                        new
                        {
                            Id = 4,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Price = 600m,
                            ServiceName = "Massage"
                        },
                        new
                        {
                            Id = 5,
                            Duration = new TimeSpan(0, 0, 40, 0, 0),
                            Price = 500m,
                            ServiceName = "Ansiktsbehandling"
                        });
                });

            modelBuilder.Entity("BookingService", b =>
                {
                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeService", b =>
                {
                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Booking", b =>
                {
                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fjordingarnas_Bokningssystem.Models.Employee", "Employee")
                        .WithMany("Bookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Fjordingarnas_Bokningssystem.Models.Employee", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
